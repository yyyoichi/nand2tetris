// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Not(in=reset, out=ireset);
    Not(in=load, out=iload);

    //zx
    Or(a=reset, b=load, out=zx);
    //nx
    Or(a=load, b=inc, out=nx0);
    And(a=nx0, b=ireset, out=nx);
    //zy
    Or(a=iload, b=reset, out=zy);
    //ny
    And(a=iload, b=ireset, out=ny);
    //f
    And(a=iload, b=inc, out=f0);
    Or(a=f0, b=reset, out=f);
    //no
    And(a=iload, b=inc, out=no0);
    And(a=no0, b=ireset, out=no);
    
    ALU(x=px, y=in, zx=zx, nx=nx, zy=zy, ny=ny, f=f, no=no, out=aluout, zr=zr, ng=ng);
    Register(in=aluout, load=true, out=px, out=out);
}
